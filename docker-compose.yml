services:
  api01: &api01
    build:
      context: .
      dockerfile: Dockerfile
    command: ["./server"]
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NATS_URL=nats://nats:4222
      - PORT=3000
      - DEFAULT_PAYMENT_URL=http://payment-processor-default:8080
      - FALLBACK_PAYMENT_URL=http://payment-processor-fallback:8080
      - UNIX_SOCKET_PATH=/var/rinha01.sock
      - DATABASE_URL=postgres://myuser:mypassword@postgres:5432/payments
      - RUST_LOG=rinha_rust_warp=info
      - MAX_CONCURRENT_MESSAGES=500
    volumes:
      - .:/usr/src/app
      - sockets:/var
    networks:
      - backend
      - payment-processor
    depends_on:
      - nats
      - postgres
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '50MB'

  api02:
    <<: *api01
    hostname: api02
    command: ["./server"]
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NATS_URL=nats://nats:4222
      - PORT=3000
      - DEFAULT_PAYMENT_URL=http://payment-processor-default:8080
      - FALLBACK_PAYMENT_URL=http://payment-processor-fallback:8080
      - UNIX_SOCKET_PATH=/var/rinha02.sock
      - DATABASE_URL=postgres://myuser:mypassword@postgres:5432/payments
      - RUST_LOG=rinha_rust_warp=info
      - MAX_CONCURRENT_MESSAGES=500
    volumes:
      - .:/usr/src/app
      - sockets:/var

  openresty:
    image: openresty/openresty
    volumes:
      - ./nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf
      - ./lua_scripts:/etc/nginx/lua
      - sockets:/var
    ports:
      - "9999:9999"
    networks:
      - backend
    depends_on:
      - api01
      - api02
    deploy:
      resources:
        limits:
          cpus: '0.30'
          memory: '100MB'

  # Payment processing workers
  worker01:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["./worker"]
    environment:
      - NATS_URL=nats://nats:4222
      - DEFAULT_PAYMENT_URL=http://payment-processor-default:8080
      - FALLBACK_PAYMENT_URL=http://payment-processor-fallback:8080
      - DATABASE_URL=postgres://myuser:mypassword@postgres:5432/payments
      - RUST_LOG=rinha_rust_warp=info
    networks:
      - backend
      - payment-processor
    depends_on:
      - nats
      - postgres
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '60MB'

  worker02:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["./worker"]
    environment:
      - NATS_URL=nats://nats:4222
      - DEFAULT_PAYMENT_URL=http://payment-processor-default:8080
      - FALLBACK_PAYMENT_URL=http://payment-processor-fallback:8080
      - DATABASE_URL=postgres://myuser:mypassword@postgres:5432/payments
      - RUST_LOG=rinha_rust_warp=info
    networks:
      - backend
      - payment-processor
    depends_on:
      - nats
      - postgres
    deploy:
      resources:
        limits:
          cpus: '0.20'
          memory: '60MB'

  nats:
    image: nats:2.10.16-alpine3.19
    command: -js -sd /data -m 8222
    ports:
      - "4222:4222"
      - "8222:8222"
    healthcheck:
      test: wget http://localhost:8222/healthz -q -S -O -
      start_period: 0s
      retries: 3
      timeout: 3s
      interval: 14s
    volumes:
      - nats_data:/data
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '50MB'

  postgres:
    image: postgres:17.5-alpine
    container_name: my-postgres-db
    restart: always
    environment:
      POSTGRES_DB: payments
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d payments"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.35'
          memory: '100MB'

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true

volumes:
  sockets:
  postgres_data:
  nats_data:
